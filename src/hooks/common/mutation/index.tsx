import { useMutation, useQueryClient } from "@tanstack/react-query";
import { Post, Delete, Put } from "../../../utils/apiService";
import { apiUrl } from "../apiUrls";
import { keys } from "../keys";
const baseUrl = "http://localhost:5034/api/"; //process.env.REACT_APP_API_URL;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Add Task Type ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const addTaskTypes = async (body: any) => {
  return Post({
    url: `${baseUrl}${apiUrl.ADD_TASK_TYPES}`,
    body,
  });
};
export const useAddTaskTypes = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (body: any) => addTaskTypes(body),
    onSuccess: () => {
      // Invalidate to refetch task types
      queryClient.invalidateQueries([keys.GET_ALLL_TASK_TYPES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Update Task Type ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const updateTaskTypes = async (id: number, body: any) => {
  console.log(
    "Updating with URL:",
    `${baseUrl}${apiUrl.UPDATE_TASK_TYPES}/${id}`
  );
  return Put({
    url: `${baseUrl}${apiUrl.UPDATE_TASK_TYPES}/${id}`,
    body,
  });
};
export const useUpdateTaskTypes = () => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: ({ id, body }: { id: number; body: any }) =>
      updateTaskTypes(id, body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_TASK_TYPES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Delete Task Type ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const deleteTaskTypes = async (id: any) => {
  return Delete({
    url: `${baseUrl}${apiUrl.DELETE_TASK_TYPES}/${id}`,
  });
};
export const useDeleteTaskTypes = (id: number) => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (id: number) => deleteTaskTypes(id),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_TASK_TYPES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Add Priority ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const addPriority = async (body: any) => {
  return Post({
    url: `${baseUrl}${apiUrl.ADD_PRIORITIES}`,
    body,
  });
};
export const useAddPriority = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (body: any) => addPriority(body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_PRIORITIES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Update Priority ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const updatePriority = async (id: number, body: any) => {
  return Put({
    url: `${baseUrl}${apiUrl.UPDATE_PRIORITIES}/${id}`,
    body,
  });
};
export const useUpdatePriority = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: ({ id, body }: { id: number; body: any }) =>
      updatePriority(id, body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_PRIORITIES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Delete Priority ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const deletePriority = async (id: any) => {
  return Delete({
    url: `${baseUrl}${apiUrl.DELETE_PRIORITIES}/${id}`,
  });
};
export const useDeletePriority = (id: number) => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (id: number) => deletePriority(id),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_PRIORITIES]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Add Status ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const addStatus = async (body: any) => {
  return Post({
    url: `${baseUrl}${apiUrl.ADD_STATUS}`,
    body,
  });
};
export const useAddStatus = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (body: any) => addStatus(body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_STATUS]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Update Status ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const updateStatus = async (id: number, body: any) => {
  return Put({
    url: `${baseUrl}${apiUrl.UPDATE_STATUS}/${id}`,
    body,
  });
};
export const useUpdateStatus = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: ({ id, body }: { id: number; body: any }) =>
      updateStatus(id, body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_STATUS]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Delete Status ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const deleteStatus = async (id: any) => {
  return Delete({
    url: `${baseUrl}${apiUrl.DELETE_STATUS}/${id}`,
  });
};
export const useDeleteStatus = (id: number) => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (id: number) => deleteStatus(id),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_STATUS]);
    },
  });
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Add Project ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const addProject = async (body: any) => {
  return Post({
    url: `${baseUrl}${apiUrl.ADD_PROJECT}`,
    body,
  });
};
export const useAddProject = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (body: any) => addProject(body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_PROJECTS]);
    },
  });
};

// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////// Update Project ///////////////////////////////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// const updateStatus = async (id: number, body: any) => {
//   return Put({
//     url: `${baseUrl}${apiUrl.UPDATE_STATUS}/${id}`,
//     body,
//   });
// };
// export const useUpdateStatus = () => {
//   const queryClient = useQueryClient();
//   return useMutation({
//     mutationFn: ({ id, body }: { id: number; body: any }) =>
//       updateStatus(id, body),
//     onSuccess: () => {
//       queryClient.invalidateQueries([keys.GET_ALLL_STATUS]);
//     },
//   });
// };

// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ///////////////////////////////////////////// Delete Project ///////////////////////////////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// const deleteStatus = async (id: any) => {
//   return Delete({
//     url: `${baseUrl}${apiUrl.DELETE_STATUS}/${id}`,
//   });
// };
// export const useDeleteStatus = (id: number) => {
//   const queryClient = useQueryClient();
//   return useMutation({
//     mutationFn: (id: number) => deleteStatus(id),
//     onSuccess: () => {
//       queryClient.invalidateQueries([keys.GET_ALLL_STATUS]);
//     },
//   });
// };

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////// Add Bucket ///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const addBucket = async (body: any) => {
  return Post({
    url: `${baseUrl}${apiUrl.ADD_BUCKET}`,
    body,
  });
};
export const useAddBucket = () => {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (body: any) => addBucket(body),
    onSuccess: () => {
      queryClient.invalidateQueries([keys.GET_ALLL_BUCKETS]);
    },
  });
};
